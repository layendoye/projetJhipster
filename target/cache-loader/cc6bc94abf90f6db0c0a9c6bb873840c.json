{"remainingRequest":"/home/abdoulaye/Bureau/Projet JHipster/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/abdoulaye/Bureau/Projet JHipster/node_modules/ts-loader/index.js??ref--9-3!/home/abdoulaye/Bureau/Projet JHipster/node_modules/eslint-loader/dist/cjs.js!/home/abdoulaye/Bureau/Projet JHipster/src/main/webapp/app/core/auth/account.service.ts","dependencies":[{"path":"/home/abdoulaye/Bureau/Projet JHipster/src/main/webapp/app/core/auth/account.service.ts","mtime":1570977829268},{"path":"/home/abdoulaye/Bureau/Projet JHipster/node_modules/angular2-template-loader/index.js","mtime":1570659663017},{"path":"/home/abdoulaye/Bureau/Projet JHipster/node_modules/cache-loader/dist/cjs.js","mtime":1570659664089},{"path":"/home/abdoulaye/Bureau/Projet JHipster/node_modules/thread-loader/dist/cjs.js","mtime":1570659677181},{"path":"/home/abdoulaye/Bureau/Projet JHipster/node_modules/ts-loader/index.js","mtime":1570659677217},{"path":"/home/abdoulaye/Bureau/Projet JHipster/node_modules/eslint-loader/dist/cjs.js","mtime":1570659665293}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYSwgX2IsIF9jOwppbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7CmltcG9ydCB7IEpoaUxhbmd1YWdlU2VydmljZSB9IGZyb20gJ25nLWpoaXBzdGVyJzsKaW1wb3J0IHsgU2Vzc2lvblN0b3JhZ2VTZXJ2aWNlIH0gZnJvbSAnbmd4LXdlYnN0b3JhZ2UnOwppbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnOwppbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7CmltcG9ydCB7IFNFUlZFUl9BUElfVVJMIH0gZnJvbSAnYXBwL2FwcC5jb25zdGFudHMnOwpsZXQgQWNjb3VudFNlcnZpY2UgPSBjbGFzcyBBY2NvdW50U2VydmljZSB7CiAgICBjb25zdHJ1Y3RvcihsYW5ndWFnZVNlcnZpY2UsIHNlc3Npb25TdG9yYWdlLCBodHRwKSB7CiAgICAgICAgdGhpcy5sYW5ndWFnZVNlcnZpY2UgPSBsYW5ndWFnZVNlcnZpY2U7CiAgICAgICAgdGhpcy5zZXNzaW9uU3RvcmFnZSA9IHNlc3Npb25TdG9yYWdlOwogICAgICAgIHRoaXMuaHR0cCA9IGh0dHA7CiAgICAgICAgdGhpcy5hdXRoZW50aWNhdGVkID0gZmFsc2U7CiAgICAgICAgdGhpcy5hdXRoZW50aWNhdGlvblN0YXRlID0gbmV3IFN1YmplY3QoKTsKICAgIH0KICAgIHVzZXJDb25uZWN0ZSgpIHsKICAgICAgICByZXR1cm4gdGhpcy5odHRwLmdldChTRVJWRVJfQVBJX1VSTCArICdhcGkvdXNlckNvbm5lY3RlJyk7CiAgICB9CiAgICBmZXRjaCgpIHsKICAgICAgICByZXR1cm4gdGhpcy5odHRwLmdldChTRVJWRVJfQVBJX1VSTCArICdhcGkvYWNjb3VudCcsIHsgb2JzZXJ2ZTogJ3Jlc3BvbnNlJyB9KTsKICAgIH0KICAgIHNhdmUoYWNjb3VudCkgewogICAgICAgIHJldHVybiB0aGlzLmh0dHAucG9zdChTRVJWRVJfQVBJX1VSTCArICdhcGkvYWNjb3VudCcsIGFjY291bnQsIHsgb2JzZXJ2ZTogJ3Jlc3BvbnNlJyB9KTsKICAgIH0KICAgIGF1dGhlbnRpY2F0ZShpZGVudGl0eSkgewogICAgICAgIHRoaXMudXNlcklkZW50aXR5ID0gaWRlbnRpdHk7CiAgICAgICAgdGhpcy5hdXRoZW50aWNhdGVkID0gaWRlbnRpdHkgIT09IG51bGw7CiAgICAgICAgdGhpcy5hdXRoZW50aWNhdGlvblN0YXRlLm5leHQodGhpcy51c2VySWRlbnRpdHkpOwogICAgfQogICAgaGFzQW55QXV0aG9yaXR5KGF1dGhvcml0aWVzKSB7CiAgICAgICAgaWYgKCF0aGlzLmF1dGhlbnRpY2F0ZWQgfHwgIXRoaXMudXNlcklkZW50aXR5IHx8ICF0aGlzLnVzZXJJZGVudGl0eS5hdXRob3JpdGllcykgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICAgIHJldHVybiBhdXRob3JpdGllcy5zb21lKChhdXRob3JpdHkpID0+IHRoaXMudXNlcklkZW50aXR5LmF1dGhvcml0aWVzLmluY2x1ZGVzKGF1dGhvcml0eSkpOwogICAgfQogICAgaGFzQXV0aG9yaXR5KGF1dGhvcml0eSkgewogICAgICAgIGlmICghdGhpcy5hdXRoZW50aWNhdGVkKSB7CiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoZmFsc2UpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gdGhpcy5pZGVudGl0eSgpLnRoZW4oaWQgPT4gewogICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGlkLmF1dGhvcml0aWVzICYmIGlkLmF1dGhvcml0aWVzLmluY2x1ZGVzKGF1dGhvcml0eSkpOwogICAgICAgIH0sICgpID0+IHsKICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShmYWxzZSk7CiAgICAgICAgfSk7CiAgICB9CiAgICBpZGVudGl0eShmb3JjZSkgewogICAgICAgIGlmIChmb3JjZSkgewogICAgICAgICAgICB0aGlzLnVzZXJJZGVudGl0eSA9IHVuZGVmaW5lZDsKICAgICAgICB9CiAgICAgICAgLy8gY2hlY2sgYW5kIHNlZSBpZiB3ZSBoYXZlIHJldHJpZXZlZCB0aGUgdXNlcklkZW50aXR5IGRhdGEgZnJvbSB0aGUgc2VydmVyLgogICAgICAgIC8vIGlmIHdlIGhhdmUsIHJldXNlIGl0IGJ5IGltbWVkaWF0ZWx5IHJlc29sdmluZwogICAgICAgIGlmICh0aGlzLnVzZXJJZGVudGl0eSkgewogICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMudXNlcklkZW50aXR5KTsKICAgICAgICB9CiAgICAgICAgLy8gcmV0cmlldmUgdGhlIHVzZXJJZGVudGl0eSBkYXRhIGZyb20gdGhlIHNlcnZlciwgdXBkYXRlIHRoZSBpZGVudGl0eSBvYmplY3QsIGFuZCB0aGVuIHJlc29sdmUuCiAgICAgICAgcmV0dXJuIHRoaXMuZmV0Y2goKQogICAgICAgICAgICAudG9Qcm9taXNlKCkKICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICBjb25zdCBhY2NvdW50ID0gcmVzcG9uc2UuYm9keTsKICAgICAgICAgICAgaWYgKGFjY291bnQpIHsKICAgICAgICAgICAgICAgIHRoaXMudXNlcklkZW50aXR5ID0gYWNjb3VudDsKICAgICAgICAgICAgICAgIHRoaXMuYXV0aGVudGljYXRlZCA9IHRydWU7CiAgICAgICAgICAgICAgICAvLyBBZnRlciByZXRyaWV2ZSB0aGUgYWNjb3VudCBpbmZvLCB0aGUgbGFuZ3VhZ2Ugd2lsbCBiZSBjaGFuZ2VkIHRvCiAgICAgICAgICAgICAgICAvLyB0aGUgdXNlcidzIHByZWZlcnJlZCBsYW5ndWFnZSBjb25maWd1cmVkIGluIHRoZSBhY2NvdW50IHNldHRpbmcKICAgICAgICAgICAgICAgIGlmICh0aGlzLnVzZXJJZGVudGl0eS5sYW5nS2V5KSB7CiAgICAgICAgICAgICAgICAgICAgY29uc3QgbGFuZ0tleSA9IHRoaXMuc2Vzc2lvblN0b3JhZ2UucmV0cmlldmUoJ2xvY2FsZScpIHx8IHRoaXMudXNlcklkZW50aXR5LmxhbmdLZXk7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5sYW5ndWFnZVNlcnZpY2UuY2hhbmdlTGFuZ3VhZ2UobGFuZ0tleSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLnVzZXJJZGVudGl0eSA9IG51bGw7CiAgICAgICAgICAgICAgICB0aGlzLmF1dGhlbnRpY2F0ZWQgPSBmYWxzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLmF1dGhlbnRpY2F0aW9uU3RhdGUubmV4dCh0aGlzLnVzZXJJZGVudGl0eSk7CiAgICAgICAgICAgIHJldHVybiB0aGlzLnVzZXJJZGVudGl0eTsKICAgICAgICB9KQogICAgICAgICAgICAuY2F0Y2goZXJyID0+IHsKICAgICAgICAgICAgdGhpcy51c2VySWRlbnRpdHkgPSBudWxsOwogICAgICAgICAgICB0aGlzLmF1dGhlbnRpY2F0ZWQgPSBmYWxzZTsKICAgICAgICAgICAgdGhpcy5hdXRoZW50aWNhdGlvblN0YXRlLm5leHQodGhpcy51c2VySWRlbnRpdHkpOwogICAgICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgICB9KTsKICAgIH0KICAgIGlzQXV0aGVudGljYXRlZCgpIHsKICAgICAgICByZXR1cm4gdGhpcy5hdXRoZW50aWNhdGVkOwogICAgfQogICAgaXNJZGVudGl0eVJlc29sdmVkKCkgewogICAgICAgIHJldHVybiB0aGlzLnVzZXJJZGVudGl0eSAhPT0gdW5kZWZpbmVkOwogICAgfQogICAgZ2V0QXV0aGVudGljYXRpb25TdGF0ZSgpIHsKICAgICAgICByZXR1cm4gdGhpcy5hdXRoZW50aWNhdGlvblN0YXRlLmFzT2JzZXJ2YWJsZSgpOwogICAgfQogICAgZ2V0SW1hZ2VVcmwoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuaXNJZGVudGl0eVJlc29sdmVkKCkgPyB0aGlzLnVzZXJJZGVudGl0eS5pbWFnZVVybCA6IG51bGw7CiAgICB9Cn07CkFjY291bnRTZXJ2aWNlID0gdHNsaWJfMS5fX2RlY29yYXRlKFsKICAgIEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSksCiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoImRlc2lnbjpwYXJhbXR5cGVzIiwgW3R5cGVvZiAoX2EgPSB0eXBlb2YgSmhpTGFuZ3VhZ2VTZXJ2aWNlICE9PSAidW5kZWZpbmVkIiAmJiBKaGlMYW5ndWFnZVNlcnZpY2UpID09PSAiZnVuY3Rpb24iID8gX2EgOiBPYmplY3QsIHR5cGVvZiAoX2IgPSB0eXBlb2YgU2Vzc2lvblN0b3JhZ2VTZXJ2aWNlICE9PSAidW5kZWZpbmVkIiAmJiBTZXNzaW9uU3RvcmFnZVNlcnZpY2UpID09PSAiZnVuY3Rpb24iID8gX2IgOiBPYmplY3QsIHR5cGVvZiAoX2MgPSB0eXBlb2YgSHR0cENsaWVudCAhPT0gInVuZGVmaW5lZCIgJiYgSHR0cENsaWVudCkgPT09ICJmdW5jdGlvbiIgPyBfYyA6IE9iamVjdF0pCl0sIEFjY291bnRTZXJ2aWNlKTsKZXhwb3J0IHsgQWNjb3VudFNlcnZpY2UgfTsK"},{"version":3,"file":"/home/abdoulaye/Bureau/Projet JHipster/src/main/webapp/app/core/auth/account.service.ts","sourceRoot":"","sources":["/home/abdoulaye/Bureau/Projet JHipster/node_modules/eslint-loader/dist/cjs.js!/home/abdoulaye/Bureau/Projet JHipster/src/main/webapp/app/core/auth/account.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { JhiLanguageService } from 'ng-jhipster';\nimport { SessionStorageService } from 'ngx-webstorage';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { Account } from 'app/core/user/account.model';\nimport {User} from \"app/core/user/user.model\";\n\n@Injectable({ providedIn: 'root' })\nexport class AccountService {\n  private userIdentity: any;\n  private authenticated = false;\n  private authenticationState = new Subject<any>();\n\n  constructor(private languageService: JhiLanguageService, private sessionStorage: SessionStorageService, private http: HttpClient) {}\n  userConnecte(): Observable<User> {\n    return this.http.get<User>(SERVER_API_URL + 'api/userConnecte');\n  }\n  fetch(): Observable<HttpResponse<Account>> {\n    return this.http.get<Account>(SERVER_API_URL + 'api/account', { observe: 'response' });\n  }\n\n  save(account: any): Observable<HttpResponse<any>> {\n    return this.http.post(SERVER_API_URL + 'api/account', account, { observe: 'response' });\n  }\n\n  authenticate(identity) {\n    this.userIdentity = identity;\n    this.authenticated = identity !== null;\n    this.authenticationState.next(this.userIdentity);\n  }\n\n  hasAnyAuthority(authorities: string[]): boolean {\n    if (!this.authenticated || !this.userIdentity || !this.userIdentity.authorities) {\n      return false;\n    }\n\n    return authorities.some((authority: string) => this.userIdentity.authorities.includes(authority));\n  }\n\n  hasAuthority(authority: string): Promise<boolean> {\n    if (!this.authenticated) {\n      return Promise.resolve(false);\n    }\n\n    return this.identity().then(\n      id => {\n        return Promise.resolve(id.authorities && id.authorities.includes(authority));\n      },\n      () => {\n        return Promise.resolve(false);\n      }\n    );\n  }\n\n  identity(force?: boolean): Promise<Account> {\n    if (force) {\n      this.userIdentity = undefined;\n    }\n\n    // check and see if we have retrieved the userIdentity data from the server.\n    // if we have, reuse it by immediately resolving\n    if (this.userIdentity) {\n      return Promise.resolve(this.userIdentity);\n    }\n\n    // retrieve the userIdentity data from the server, update the identity object, and then resolve.\n    return this.fetch()\n      .toPromise()\n      .then(response => {\n        const account: Account = response.body;\n        if (account) {\n          this.userIdentity = account;\n          this.authenticated = true;\n          // After retrieve the account info, the language will be changed to\n          // the user's preferred language configured in the account setting\n          if (this.userIdentity.langKey) {\n            const langKey = this.sessionStorage.retrieve('locale') || this.userIdentity.langKey;\n            this.languageService.changeLanguage(langKey);\n          }\n        } else {\n          this.userIdentity = null;\n          this.authenticated = false;\n        }\n        this.authenticationState.next(this.userIdentity);\n        return this.userIdentity;\n      })\n      .catch(err => {\n        this.userIdentity = null;\n        this.authenticated = false;\n        this.authenticationState.next(this.userIdentity);\n        return null;\n      });\n  }\n\n  isAuthenticated(): boolean {\n    return this.authenticated;\n  }\n\n  isIdentityResolved(): boolean {\n    return this.userIdentity !== undefined;\n  }\n\n  getAuthenticationState(): Observable<any> {\n    return this.authenticationState.asObservable();\n  }\n\n  getImageUrl(): string {\n    return this.isIdentityResolved() ? this.userIdentity.imageUrl : null;\n  }\n}\n"]}]}