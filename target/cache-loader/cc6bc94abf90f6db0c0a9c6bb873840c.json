{"remainingRequest":"/home/abdoulaye/Bureau/Projet JHipster/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/abdoulaye/Bureau/Projet JHipster/node_modules/ts-loader/index.js??ref--9-3!/home/abdoulaye/Bureau/Projet JHipster/node_modules/eslint-loader/dist/cjs.js!/home/abdoulaye/Bureau/Projet JHipster/src/main/webapp/app/core/auth/account.service.ts","dependencies":[{"path":"/home/abdoulaye/Bureau/Projet JHipster/src/main/webapp/app/core/auth/account.service.ts","mtime":1570614183334},{"path":"/home/abdoulaye/Bureau/Projet JHipster/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/abdoulaye/Bureau/Projet JHipster/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/abdoulaye/Bureau/Projet JHipster/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/abdoulaye/Bureau/Projet JHipster/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/abdoulaye/Bureau/Projet JHipster/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYSwgX2IsIF9jOwppbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7CmltcG9ydCB7IEpoaUxhbmd1YWdlU2VydmljZSB9IGZyb20gJ25nLWpoaXBzdGVyJzsKaW1wb3J0IHsgU2Vzc2lvblN0b3JhZ2VTZXJ2aWNlIH0gZnJvbSAnbmd4LXdlYnN0b3JhZ2UnOwppbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnOwppbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7CmltcG9ydCB7IFNFUlZFUl9BUElfVVJMIH0gZnJvbSAnYXBwL2FwcC5jb25zdGFudHMnOwpsZXQgQWNjb3VudFNlcnZpY2UgPSBjbGFzcyBBY2NvdW50U2VydmljZSB7CiAgICBjb25zdHJ1Y3RvcihsYW5ndWFnZVNlcnZpY2UsIHNlc3Npb25TdG9yYWdlLCBodHRwKSB7CiAgICAgICAgdGhpcy5sYW5ndWFnZVNlcnZpY2UgPSBsYW5ndWFnZVNlcnZpY2U7CiAgICAgICAgdGhpcy5zZXNzaW9uU3RvcmFnZSA9IHNlc3Npb25TdG9yYWdlOwogICAgICAgIHRoaXMuaHR0cCA9IGh0dHA7CiAgICAgICAgdGhpcy5hdXRoZW50aWNhdGVkID0gZmFsc2U7CiAgICAgICAgdGhpcy5hdXRoZW50aWNhdGlvblN0YXRlID0gbmV3IFN1YmplY3QoKTsKICAgIH0KICAgIGZldGNoKCkgewogICAgICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0KFNFUlZFUl9BUElfVVJMICsgJ2FwaS9hY2NvdW50JywgeyBvYnNlcnZlOiAncmVzcG9uc2UnIH0pOwogICAgfQogICAgc2F2ZShhY2NvdW50KSB7CiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5wb3N0KFNFUlZFUl9BUElfVVJMICsgJ2FwaS9hY2NvdW50JywgYWNjb3VudCwgeyBvYnNlcnZlOiAncmVzcG9uc2UnIH0pOwogICAgfQogICAgYXV0aGVudGljYXRlKGlkZW50aXR5KSB7CiAgICAgICAgdGhpcy51c2VySWRlbnRpdHkgPSBpZGVudGl0eTsKICAgICAgICB0aGlzLmF1dGhlbnRpY2F0ZWQgPSBpZGVudGl0eSAhPT0gbnVsbDsKICAgICAgICB0aGlzLmF1dGhlbnRpY2F0aW9uU3RhdGUubmV4dCh0aGlzLnVzZXJJZGVudGl0eSk7CiAgICB9CiAgICBoYXNBbnlBdXRob3JpdHkoYXV0aG9yaXRpZXMpIHsKICAgICAgICBpZiAoIXRoaXMuYXV0aGVudGljYXRlZCB8fCAhdGhpcy51c2VySWRlbnRpdHkgfHwgIXRoaXMudXNlcklkZW50aXR5LmF1dGhvcml0aWVzKSB7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGF1dGhvcml0aWVzLnNvbWUoKGF1dGhvcml0eSkgPT4gdGhpcy51c2VySWRlbnRpdHkuYXV0aG9yaXRpZXMuaW5jbHVkZXMoYXV0aG9yaXR5KSk7CiAgICB9CiAgICBoYXNBdXRob3JpdHkoYXV0aG9yaXR5KSB7CiAgICAgICAgaWYgKCF0aGlzLmF1dGhlbnRpY2F0ZWQpIHsKICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShmYWxzZSk7CiAgICAgICAgfQogICAgICAgIHJldHVybiB0aGlzLmlkZW50aXR5KCkudGhlbihpZCA9PiB7CiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoaWQuYXV0aG9yaXRpZXMgJiYgaWQuYXV0aG9yaXRpZXMuaW5jbHVkZXMoYXV0aG9yaXR5KSk7CiAgICAgICAgfSwgKCkgPT4gewogICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGZhbHNlKTsKICAgICAgICB9KTsKICAgIH0KICAgIGlkZW50aXR5KGZvcmNlKSB7CiAgICAgICAgaWYgKGZvcmNlKSB7CiAgICAgICAgICAgIHRoaXMudXNlcklkZW50aXR5ID0gdW5kZWZpbmVkOwogICAgICAgIH0KICAgICAgICAvLyBjaGVjayBhbmQgc2VlIGlmIHdlIGhhdmUgcmV0cmlldmVkIHRoZSB1c2VySWRlbnRpdHkgZGF0YSBmcm9tIHRoZSBzZXJ2ZXIuCiAgICAgICAgLy8gaWYgd2UgaGF2ZSwgcmV1c2UgaXQgYnkgaW1tZWRpYXRlbHkgcmVzb2x2aW5nCiAgICAgICAgaWYgKHRoaXMudXNlcklkZW50aXR5KSB7CiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy51c2VySWRlbnRpdHkpOwogICAgICAgIH0KICAgICAgICAvLyByZXRyaWV2ZSB0aGUgdXNlcklkZW50aXR5IGRhdGEgZnJvbSB0aGUgc2VydmVyLCB1cGRhdGUgdGhlIGlkZW50aXR5IG9iamVjdCwgYW5kIHRoZW4gcmVzb2x2ZS4KICAgICAgICByZXR1cm4gdGhpcy5mZXRjaCgpCiAgICAgICAgICAgIC50b1Byb21pc2UoKQogICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgIGNvbnN0IGFjY291bnQgPSByZXNwb25zZS5ib2R5OwogICAgICAgICAgICBpZiAoYWNjb3VudCkgewogICAgICAgICAgICAgICAgdGhpcy51c2VySWRlbnRpdHkgPSBhY2NvdW50OwogICAgICAgICAgICAgICAgdGhpcy5hdXRoZW50aWNhdGVkID0gdHJ1ZTsKICAgICAgICAgICAgICAgIC8vIEFmdGVyIHJldHJpZXZlIHRoZSBhY2NvdW50IGluZm8sIHRoZSBsYW5ndWFnZSB3aWxsIGJlIGNoYW5nZWQgdG8KICAgICAgICAgICAgICAgIC8vIHRoZSB1c2VyJ3MgcHJlZmVycmVkIGxhbmd1YWdlIGNvbmZpZ3VyZWQgaW4gdGhlIGFjY291bnQgc2V0dGluZwogICAgICAgICAgICAgICAgaWYgKHRoaXMudXNlcklkZW50aXR5LmxhbmdLZXkpIHsKICAgICAgICAgICAgICAgICAgICBjb25zdCBsYW5nS2V5ID0gdGhpcy5zZXNzaW9uU3RvcmFnZS5yZXRyaWV2ZSgnbG9jYWxlJykgfHwgdGhpcy51c2VySWRlbnRpdHkubGFuZ0tleTsKICAgICAgICAgICAgICAgICAgICB0aGlzLmxhbmd1YWdlU2VydmljZS5jaGFuZ2VMYW5ndWFnZShsYW5nS2V5KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMudXNlcklkZW50aXR5ID0gbnVsbDsKICAgICAgICAgICAgICAgIHRoaXMuYXV0aGVudGljYXRlZCA9IGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMuYXV0aGVudGljYXRpb25TdGF0ZS5uZXh0KHRoaXMudXNlcklkZW50aXR5KTsKICAgICAgICAgICAgcmV0dXJuIHRoaXMudXNlcklkZW50aXR5OwogICAgICAgIH0pCiAgICAgICAgICAgIC5jYXRjaChlcnIgPT4gewogICAgICAgICAgICB0aGlzLnVzZXJJZGVudGl0eSA9IG51bGw7CiAgICAgICAgICAgIHRoaXMuYXV0aGVudGljYXRlZCA9IGZhbHNlOwogICAgICAgICAgICB0aGlzLmF1dGhlbnRpY2F0aW9uU3RhdGUubmV4dCh0aGlzLnVzZXJJZGVudGl0eSk7CiAgICAgICAgICAgIHJldHVybiBudWxsOwogICAgICAgIH0pOwogICAgfQogICAgaXNBdXRoZW50aWNhdGVkKCkgewogICAgICAgIHJldHVybiB0aGlzLmF1dGhlbnRpY2F0ZWQ7CiAgICB9CiAgICBpc0lkZW50aXR5UmVzb2x2ZWQoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMudXNlcklkZW50aXR5ICE9PSB1bmRlZmluZWQ7CiAgICB9CiAgICBnZXRBdXRoZW50aWNhdGlvblN0YXRlKCkgewogICAgICAgIHJldHVybiB0aGlzLmF1dGhlbnRpY2F0aW9uU3RhdGUuYXNPYnNlcnZhYmxlKCk7CiAgICB9CiAgICBnZXRJbWFnZVVybCgpIHsKICAgICAgICByZXR1cm4gdGhpcy5pc0lkZW50aXR5UmVzb2x2ZWQoKSA/IHRoaXMudXNlcklkZW50aXR5LmltYWdlVXJsIDogbnVsbDsKICAgIH0KfTsKQWNjb3VudFNlcnZpY2UgPSB0c2xpYl8xLl9fZGVjb3JhdGUoWwogICAgSW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KSwKICAgIHRzbGliXzEuX19tZXRhZGF0YSgiZGVzaWduOnBhcmFtdHlwZXMiLCBbdHlwZW9mIChfYSA9IHR5cGVvZiBKaGlMYW5ndWFnZVNlcnZpY2UgIT09ICJ1bmRlZmluZWQiICYmIEpoaUxhbmd1YWdlU2VydmljZSkgPT09ICJmdW5jdGlvbiIgPyBfYSA6IE9iamVjdCwgdHlwZW9mIChfYiA9IHR5cGVvZiBTZXNzaW9uU3RvcmFnZVNlcnZpY2UgIT09ICJ1bmRlZmluZWQiICYmIFNlc3Npb25TdG9yYWdlU2VydmljZSkgPT09ICJmdW5jdGlvbiIgPyBfYiA6IE9iamVjdCwgdHlwZW9mIChfYyA9IHR5cGVvZiBIdHRwQ2xpZW50ICE9PSAidW5kZWZpbmVkIiAmJiBIdHRwQ2xpZW50KSA9PT0gImZ1bmN0aW9uIiA/IF9jIDogT2JqZWN0XSkKXSwgQWNjb3VudFNlcnZpY2UpOwpleHBvcnQgeyBBY2NvdW50U2VydmljZSB9Owo="},{"version":3,"file":"/home/abdoulaye/Bureau/Projet JHipster/src/main/webapp/app/core/auth/account.service.ts","sourceRoot":"","sources":["/home/abdoulaye/Bureau/Projet JHipster/node_modules/eslint-loader/dist/cjs.js!/home/abdoulaye/Bureau/Projet JHipster/src/main/webapp/app/core/auth/account.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { JhiLanguageService } from 'ng-jhipster';\nimport { SessionStorageService } from 'ngx-webstorage';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { Account } from 'app/core/user/account.model';\n\n@Injectable({ providedIn: 'root' })\nexport class AccountService {\n  private userIdentity: any;\n  private authenticated = false;\n  private authenticationState = new Subject<any>();\n\n  constructor(private languageService: JhiLanguageService, private sessionStorage: SessionStorageService, private http: HttpClient) {}\n\n  fetch(): Observable<HttpResponse<Account>> {\n    return this.http.get<Account>(SERVER_API_URL + 'api/account', { observe: 'response' });\n  }\n\n  save(account: any): Observable<HttpResponse<any>> {\n    return this.http.post(SERVER_API_URL + 'api/account', account, { observe: 'response' });\n  }\n\n  authenticate(identity) {\n    this.userIdentity = identity;\n    this.authenticated = identity !== null;\n    this.authenticationState.next(this.userIdentity);\n  }\n\n  hasAnyAuthority(authorities: string[]): boolean {\n    if (!this.authenticated || !this.userIdentity || !this.userIdentity.authorities) {\n      return false;\n    }\n\n    return authorities.some((authority: string) => this.userIdentity.authorities.includes(authority));\n  }\n\n  hasAuthority(authority: string): Promise<boolean> {\n    if (!this.authenticated) {\n      return Promise.resolve(false);\n    }\n\n    return this.identity().then(\n      id => {\n        return Promise.resolve(id.authorities && id.authorities.includes(authority));\n      },\n      () => {\n        return Promise.resolve(false);\n      }\n    );\n  }\n\n  identity(force?: boolean): Promise<Account> {\n    if (force) {\n      this.userIdentity = undefined;\n    }\n\n    // check and see if we have retrieved the userIdentity data from the server.\n    // if we have, reuse it by immediately resolving\n    if (this.userIdentity) {\n      return Promise.resolve(this.userIdentity);\n    }\n\n    // retrieve the userIdentity data from the server, update the identity object, and then resolve.\n    return this.fetch()\n      .toPromise()\n      .then(response => {\n        const account: Account = response.body;\n        if (account) {\n          this.userIdentity = account;\n          this.authenticated = true;\n          // After retrieve the account info, the language will be changed to\n          // the user's preferred language configured in the account setting\n          if (this.userIdentity.langKey) {\n            const langKey = this.sessionStorage.retrieve('locale') || this.userIdentity.langKey;\n            this.languageService.changeLanguage(langKey);\n          }\n        } else {\n          this.userIdentity = null;\n          this.authenticated = false;\n        }\n        this.authenticationState.next(this.userIdentity);\n        return this.userIdentity;\n      })\n      .catch(err => {\n        this.userIdentity = null;\n        this.authenticated = false;\n        this.authenticationState.next(this.userIdentity);\n        return null;\n      });\n  }\n\n  isAuthenticated(): boolean {\n    return this.authenticated;\n  }\n\n  isIdentityResolved(): boolean {\n    return this.userIdentity !== undefined;\n  }\n\n  getAuthenticationState(): Observable<any> {\n    return this.authenticationState.asObservable();\n  }\n\n  getImageUrl(): string {\n    return this.isIdentityResolved() ? this.userIdentity.imageUrl : null;\n  }\n}\n"]}]}