{"remainingRequest":"/home/abdoulaye/Bureau/Projet JHipster/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/abdoulaye/Bureau/Projet JHipster/node_modules/ts-loader/index.js??ref--9-3!/home/abdoulaye/Bureau/Projet JHipster/node_modules/eslint-loader/dist/cjs.js!/home/abdoulaye/Bureau/Projet JHipster/src/main/webapp/app/layouts/profiles/profile.service.ts","dependencies":[{"path":"/home/abdoulaye/Bureau/Projet JHipster/src/main/webapp/app/layouts/profiles/profile.service.ts","mtime":1570659678797},{"path":"/home/abdoulaye/Bureau/Projet JHipster/node_modules/angular2-template-loader/index.js","mtime":1570659663017},{"path":"/home/abdoulaye/Bureau/Projet JHipster/node_modules/cache-loader/dist/cjs.js","mtime":1570659664089},{"path":"/home/abdoulaye/Bureau/Projet JHipster/node_modules/thread-loader/dist/cjs.js","mtime":1570659677181},{"path":"/home/abdoulaye/Bureau/Projet JHipster/node_modules/ts-loader/index.js","mtime":1570659677217},{"path":"/home/abdoulaye/Bureau/Projet JHipster/node_modules/eslint-loader/dist/cjs.js","mtime":1570659665293}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYTsKaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnOwppbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnOwppbXBvcnQgeyBTRVJWRVJfQVBJX1VSTCB9IGZyb20gJ2FwcC9hcHAuY29uc3RhbnRzJzsKaW1wb3J0IHsgUHJvZmlsZUluZm8gfSBmcm9tICcuL3Byb2ZpbGUtaW5mby5tb2RlbCc7CmltcG9ydCB7IG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJzsKbGV0IFByb2ZpbGVTZXJ2aWNlID0gY2xhc3MgUHJvZmlsZVNlcnZpY2UgewogICAgY29uc3RydWN0b3IoaHR0cCkgewogICAgICAgIHRoaXMuaHR0cCA9IGh0dHA7CiAgICAgICAgdGhpcy5pbmZvVXJsID0gU0VSVkVSX0FQSV9VUkwgKyAnbWFuYWdlbWVudC9pbmZvJzsKICAgIH0KICAgIGdldFByb2ZpbGVJbmZvKCkgewogICAgICAgIGlmICh0aGlzLnByb2ZpbGVJbmZvID09PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgdGhpcy5wcm9maWxlSW5mbyA9IHRoaXMuaHR0cAogICAgICAgICAgICAgICAgLmdldCh0aGlzLmluZm9VcmwsIHsgb2JzZXJ2ZTogJ3Jlc3BvbnNlJyB9KQogICAgICAgICAgICAgICAgLnBpcGUobWFwKChyZXMpID0+IHsKICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSByZXMuYm9keTsKICAgICAgICAgICAgICAgIGNvbnN0IHBpID0gbmV3IFByb2ZpbGVJbmZvKCk7CiAgICAgICAgICAgICAgICBwaS5hY3RpdmVQcm9maWxlcyA9IGRhdGFbJ2FjdGl2ZVByb2ZpbGVzJ107CiAgICAgICAgICAgICAgICBjb25zdCBkaXNwbGF5UmliYm9uT25Qcm9maWxlcyA9IGRhdGFbJ2Rpc3BsYXktcmliYm9uLW9uLXByb2ZpbGVzJ10uc3BsaXQoJywnKTsKICAgICAgICAgICAgICAgIGlmIChwaS5hY3RpdmVQcm9maWxlcykgewogICAgICAgICAgICAgICAgICAgIGNvbnN0IHJpYmJvblByb2ZpbGVzID0gZGlzcGxheVJpYmJvbk9uUHJvZmlsZXMuZmlsdGVyKHByb2ZpbGUgPT4gcGkuYWN0aXZlUHJvZmlsZXMuaW5jbHVkZXMocHJvZmlsZSkpOwogICAgICAgICAgICAgICAgICAgIGlmIChyaWJib25Qcm9maWxlcy5sZW5ndGggIT09IDApIHsKICAgICAgICAgICAgICAgICAgICAgICAgcGkucmliYm9uRW52ID0gcmliYm9uUHJvZmlsZXNbMF07CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIHBpLmluUHJvZHVjdGlvbiA9IHBpLmFjdGl2ZVByb2ZpbGVzLmluY2x1ZGVzKCdwcm9kJyk7CiAgICAgICAgICAgICAgICAgICAgcGkuc3dhZ2dlckVuYWJsZWQgPSBwaS5hY3RpdmVQcm9maWxlcy5pbmNsdWRlcygnc3dhZ2dlcicpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIHBpOwogICAgICAgICAgICB9KSkKICAgICAgICAgICAgICAgIC50b1Byb21pc2UoKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRoaXMucHJvZmlsZUluZm87CiAgICB9Cn07ClByb2ZpbGVTZXJ2aWNlID0gdHNsaWJfMS5fX2RlY29yYXRlKFsKICAgIEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSksCiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoImRlc2lnbjpwYXJhbXR5cGVzIiwgW3R5cGVvZiAoX2EgPSB0eXBlb2YgSHR0cENsaWVudCAhPT0gInVuZGVmaW5lZCIgJiYgSHR0cENsaWVudCkgPT09ICJmdW5jdGlvbiIgPyBfYSA6IE9iamVjdF0pCl0sIFByb2ZpbGVTZXJ2aWNlKTsKZXhwb3J0IHsgUHJvZmlsZVNlcnZpY2UgfTsK"},{"version":3,"file":"/home/abdoulaye/Bureau/Projet JHipster/src/main/webapp/app/layouts/profiles/profile.service.ts","sourceRoot":"","sources":["/home/abdoulaye/Bureau/Projet JHipster/node_modules/eslint-loader/dist/cjs.js!/home/abdoulaye/Bureau/Projet JHipster/src/main/webapp/app/layouts/profiles/profile.service.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAgB,MAAM,sBAAsB,CAAC;AAEhE,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AACnD,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AACnD,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AAGrC,IAAa,cAAc,GAA3B,MAAa,cAAc;IAIzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAH5B,YAAO,GAAG,cAAc,GAAG,iBAAiB,CAAC;IAGd,CAAC;IAExC,cAAc;QACZ,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;YAClC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI;iBACzB,GAAG,CAAc,IAAI,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;iBACvD,IAAI,CACH,GAAG,CAAC,CAAC,GAA8B,EAAE,EAAE;gBACrC,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;gBACtB,MAAM,EAAE,GAAG,IAAI,WAAW,EAAE,CAAC;gBAC7B,EAAE,CAAC,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBAC3C,MAAM,uBAAuB,GAAG,IAAI,CAAC,4BAA4B,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC9E,IAAI,EAAE,CAAC,cAAc,EAAE;oBACrB,MAAM,cAAc,GAAG,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;oBACtG,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;wBAC/B,EAAE,CAAC,SAAS,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;qBAClC;oBACD,EAAE,CAAC,YAAY,GAAG,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBACrD,EAAE,CAAC,cAAc,GAAG,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;iBAC3D;gBACD,OAAO,EAAE,CAAC;YACZ,CAAC,CAAC,CACH;iBACA,SAAS,EAAE,CAAC;SAChB;QACD,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;CACF,CAAA;AA/BY,cAAc;IAD1B,UAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;iEAKP,UAAU,oBAAV,UAAU;GAJzB,cAAc,CA+B1B;SA/BY,cAAc","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { ProfileInfo } from './profile-info.model';\nimport { map } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class ProfileService {\n  private infoUrl = SERVER_API_URL + 'management/info';\n  private profileInfo: Promise<ProfileInfo>;\n\n  constructor(private http: HttpClient) {}\n\n  getProfileInfo(): Promise<ProfileInfo> {\n    if (this.profileInfo === undefined) {\n      this.profileInfo = this.http\n        .get<ProfileInfo>(this.infoUrl, { observe: 'response' })\n        .pipe(\n          map((res: HttpResponse<ProfileInfo>) => {\n            const data = res.body;\n            const pi = new ProfileInfo();\n            pi.activeProfiles = data['activeProfiles'];\n            const displayRibbonOnProfiles = data['display-ribbon-on-profiles'].split(',');\n            if (pi.activeProfiles) {\n              const ribbonProfiles = displayRibbonOnProfiles.filter(profile => pi.activeProfiles.includes(profile));\n              if (ribbonProfiles.length !== 0) {\n                pi.ribbonEnv = ribbonProfiles[0];\n              }\n              pi.inProduction = pi.activeProfiles.includes('prod');\n              pi.swaggerEnabled = pi.activeProfiles.includes('swagger');\n            }\n            return pi;\n          })\n        )\n        .toPromise();\n    }\n    return this.profileInfo;\n  }\n}\n"]}]}